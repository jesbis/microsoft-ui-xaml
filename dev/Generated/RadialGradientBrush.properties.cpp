// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "RadialGradientBrush.h"

namespace winrt::Microsoft::UI::Xaml::Media
{
    CppWinRTActivatableClassWithDPFactory(RadialGradientBrush)
}

#include "RadialGradientBrush.g.cpp"

GlobalDependencyProperty RadialGradientBrushProperties::s_EllipseCenterProperty{ nullptr };
GlobalDependencyProperty RadialGradientBrushProperties::s_EllipseRadiusProperty{ nullptr };
GlobalDependencyProperty RadialGradientBrushProperties::s_GradientOriginProperty{ nullptr };

RadialGradientBrushProperties::RadialGradientBrushProperties()
{
    EnsureProperties();
}

void RadialGradientBrushProperties::EnsureProperties()
{
    if (!s_EllipseCenterProperty)
    {
        s_EllipseCenterProperty =
            InitializeDependencyProperty(
                L"EllipseCenter",
                winrt::name_of<winrt::float2>(),
                winrt::name_of<winrt::RadialGradientBrush>(),
                false /* isAttached */,
                ValueHelper<winrt::float2>::BoxValueIfNecessary(winrt::float2(0.5,0.5)),
                winrt::PropertyChangedCallback(&OnEllipseCenterPropertyChanged));
    }
    if (!s_EllipseRadiusProperty)
    {
        s_EllipseRadiusProperty =
            InitializeDependencyProperty(
                L"EllipseRadius",
                winrt::name_of<winrt::float2>(),
                winrt::name_of<winrt::RadialGradientBrush>(),
                false /* isAttached */,
                ValueHelper<winrt::float2>::BoxValueIfNecessary(winrt::float2(0.5,0.5)),
                winrt::PropertyChangedCallback(&OnEllipseRadiusPropertyChanged));
    }
    if (!s_GradientOriginProperty)
    {
        s_GradientOriginProperty =
            InitializeDependencyProperty(
                L"GradientOrigin",
                winrt::name_of<winrt::float2>(),
                winrt::name_of<winrt::RadialGradientBrush>(),
                false /* isAttached */,
                ValueHelper<winrt::float2>::BoxedDefaultValue(),
                winrt::PropertyChangedCallback(&OnGradientOriginPropertyChanged));
    }
}

void RadialGradientBrushProperties::ClearProperties()
{
    s_EllipseCenterProperty = nullptr;
    s_EllipseRadiusProperty = nullptr;
    s_GradientOriginProperty = nullptr;
}

void RadialGradientBrushProperties::OnEllipseCenterPropertyChanged(
    winrt::DependencyObject const& sender,
    winrt::DependencyPropertyChangedEventArgs const& args)
{
    auto owner = sender.as<winrt::RadialGradientBrush>();
    winrt::get_self<RadialGradientBrush>(owner)->OnPropertyChanged(args);
}

void RadialGradientBrushProperties::OnEllipseRadiusPropertyChanged(
    winrt::DependencyObject const& sender,
    winrt::DependencyPropertyChangedEventArgs const& args)
{
    auto owner = sender.as<winrt::RadialGradientBrush>();
    winrt::get_self<RadialGradientBrush>(owner)->OnPropertyChanged(args);
}

void RadialGradientBrushProperties::OnGradientOriginPropertyChanged(
    winrt::DependencyObject const& sender,
    winrt::DependencyPropertyChangedEventArgs const& args)
{
    auto owner = sender.as<winrt::RadialGradientBrush>();
    winrt::get_self<RadialGradientBrush>(owner)->OnPropertyChanged(args);
}

void RadialGradientBrushProperties::EllipseCenter(winrt::float2 const& value)
{
    static_cast<RadialGradientBrush*>(this)->SetValue(s_EllipseCenterProperty, ValueHelper<winrt::float2>::BoxValueIfNecessary(value));
}

winrt::float2 RadialGradientBrushProperties::EllipseCenter()
{
    return ValueHelper<winrt::float2>::CastOrUnbox(static_cast<RadialGradientBrush*>(this)->GetValue(s_EllipseCenterProperty));
}

void RadialGradientBrushProperties::EllipseRadius(winrt::float2 const& value)
{
    static_cast<RadialGradientBrush*>(this)->SetValue(s_EllipseRadiusProperty, ValueHelper<winrt::float2>::BoxValueIfNecessary(value));
}

winrt::float2 RadialGradientBrushProperties::EllipseRadius()
{
    return ValueHelper<winrt::float2>::CastOrUnbox(static_cast<RadialGradientBrush*>(this)->GetValue(s_EllipseRadiusProperty));
}

void RadialGradientBrushProperties::GradientOrigin(winrt::float2 const& value)
{
    static_cast<RadialGradientBrush*>(this)->SetValue(s_GradientOriginProperty, ValueHelper<winrt::float2>::BoxValueIfNecessary(value));
}

winrt::float2 RadialGradientBrushProperties::GradientOrigin()
{
    return ValueHelper<winrt::float2>::CastOrUnbox(static_cast<RadialGradientBrush*>(this)->GetValue(s_GradientOriginProperty));
}
